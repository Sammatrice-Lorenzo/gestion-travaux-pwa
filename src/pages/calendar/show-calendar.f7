<template>
    <div id="page-calendar-work-event-day" class="page">
        <div class="navbar no-shadow">
            <div class="navbar-bg"></div>
            <div class="navbar-inner sliding">
                <div class="left">
                    <a class="link back">
                        <i class="icon icon-back"></i>
                        <span class="if-not-md">Retour</span>
                    </a>
                </div>
                <div class="title navbar-calendar-title">
                </div>
                <div class="right">
                    <a href="#" download class="link icon-only" @click="${downloadCalendar}">
                        <i class="icon f7-icons">arrow_down_circle_fill</i>
                    </a>
                </div>
            </div>
        </div>
        <div class="page-content">
            <div id="calendar" class="block block-strong no-padding no-margin no-hairline-top"></div>
            <div class="popup popup-swipe">
                <div class="page">
                    <div class="navbar">
                        <div class="navbar-bg"></div>
                        <div class="navbar-inner">
                            <div class="title title-popup">Créer un nouveau événement</div>
                            <div class="right">
                                <a class="link popup-close">
                                    <i class="f7-icons">xmark_circle</i>
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="page-content">
                        <div class="display-flex justify-content-center align-items-center">
                            <form id="form-calendar">
                                <div class="block-title text-align-center">
                                    <p>Création prestation jour</p>
                                </div>
                                <div class="list list-strong-ios list-dividers-ios list-outline-ios no-hairlines-md">
                                    <ul>
                                        <li class="item-content item-input">
                                            <div class="item-inner">
                                                <div class="item-title item-label">Titre : </div>
                                                <div class="item-input-wrap">
                                                    <input name='title' type="text" placeholder="RDV chez le client" required validate/>
                                                </div>
                                            </div>
                                        </li>
                                        <li class="item-content item-input">
                                            <div class="item-inner">
                                                <div class="item-title item-label">Heure de début : </div>
                                                <div class="item-input-wrap">
                                                    <input name='startHours' type="time" value="08:00" required validate/>
                                                </div>
                                            </div>
                                        </li>
                                        <li class="item-content item-input">
                                            <div class="item-inner">
                                                <div class="item-title item-label">Heure de fin : </div>
                                                <div class="item-input-wrap">
                                                    <input name='endHours' type="time" value="18:00" required validate/>
                                                </div>
                                            </div>
                                        </li>
                                        <li class="item-content item-input">
                                            <div class="item-media">
                                                <i class="icon f7-icons" id="color-picker-spectrum-value">paintbrush_fill</i>
                                            </div>
                                            <div class="item-inner">
                                                <div class="item-title item-label">Couleur : </div>
                                                <div class="item-input-wrap">
                                                    <input name='color' type="text" placeholder="Couleur" 
                                                        readonly="readonly" id="color-picker-spectrum" required validate />
                                                </div>
                                            </div>
                                        </li>
                                        <li class="item-content item-input">
                                            <div class="item-media">
                                                <i class="icon f7-icons">person_alt_circle</i>
                                            </div>
                                            <div class="item-inner">
                                                <div class="item-input-wrap">
                                                    <a
                                                        class="item-link smart-select smart-select-init"
                                                        data-open-in="popup"
                                                        data-searchbar="true"
                                                        data-searchbar-placeholder="Rechercher le client"
                                                        data-close-placeholder="Fermer"
                                                    >
                                                        <select name="client">
                                                            ${clients.map((client) => $h`
                                                                <option value='${client.id}.${client.name}'>${client.name}</option>
                                                            `)}
                                                            <option value="" selected>Aucun</option>
                                                        </select>
                                                        <div class="item-content">
                                                            <div class="item-inner">
                                                                <div class="item-title">Client</div>
                                                            </div>
                                                        </div>
                                                    </a>
                                                </div>
                                            </div>
                                        </li>
                                    </ul>
                                    <div class="grid grid-cols-3 gap-4 justify-items-center items-center margin-top">
                                        <button id="btn-send" href="#" class="button button-small button-round button-tonal btn-save" @click="${send}">
                                            <i class="icon f7-icons">checkmark</i>
                                        </button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <div id="calendar-events" class="list no-margin no-hairlines no-safe-area-left">
                <ul>
                    ${eventItems.length > 0 && eventItems.map((item) => $h`
                        <li class="item-content swipeout">
                            <div class="event-color" style="background-color: ${item.color}"></div>
                            <div class="item-inner swipeout-content" data-id="${item.id}">
                                <div class="item-title">${showNameEvent(item)}</div>
                                <div class="item-after">
                                    <p class="event-times">${item.startTime}</p>
                                    <p class="event-times">${item.endTime}</p>
                                </div>
                                <div id="${item.id}" class="id-work-event-day"></div>
                            </div>
                            <div class="swipeout-actions-right">
                                <a class="edit-event" href="#" @click="${edit}">
                                    <i class="f7-icons">square_pencil</i>
                                </a>
                                <a class="swipeout-delete" @click="${(e) => calendarWorkEventDayService.removeEvent(e, $f7)}">
                                    <i class="f7-icons">trash</i>
                                </a>
                            </div>
                        </li>
                    `)}
                    ${eventItems.length === 0 && $h`
                        <li class="item-content">
                            <div class="item-inner">
                                <div class="item-title text-color-gray">Pas d'événement ce jour</div>
                            </div>
                        </li>
                    `}
                    <a data-testid="open-modal-work-event-day" href="#" class="display-flex justify-content-center button-raised col popup-open" data-popup=".popup-swipe">
                        <i class="f7-icons">calendar_badge_plus</i>
                    </a>
                </ul>
            </div>
        </div>

    </div>
</template>
<script>
    import { monthsEnum } from '../../js/enum/monthEnum.js'
    import { renderEventsCalendar, showNameEvent } from '../../js/service/calendar/renderCalendarService.ts'
    import { CalendarWorkEventDayFormService } from '../../js/service/calendar/CalendarWorkEventDayFormService.ts'
    import { createCalendar } from '../../js/service/calendar/createCalendarService.ts'
    import { handleEditClassForm } from '../../js/service/calendar/calendarForm.ts'
    import { createColorPickerForEventCalendar } from '../../js/service/calendar/colorPickerEventCalendar.ts'
    import {
        getWorkEventDayByUser,
        createWorkEventDay,
        updateWorkEventDay,
        deleteWorkEventDay,
        downloadCalendarEvents
    } from '../../js/workEventDay.js'
    import { getEventsFormatted } from '../../js/formatter/eventsFormatter.js'
    import { getClientsByUser } from '../../js/client/client.js'


    export default async (props, { $f7, $, $el, $update, $on, $onMounted }) => {
        const clients = await getClientsByUser($f7)
        const workEventDays = await getWorkEventDayByUser($f7)
        let events = getEventsFormatted(workEventDays)
        const calendarWorkEventDayService = new CalendarWorkEventDayFormService(events)

        let calendar
        let popupSwipe
        let colorPickerSpectrum
        let eventItems = []

        const renderEvents = async (calendar, isMonthUpdated = false) => {
            if (isMonthUpdated) {
                const eventsDay = await getWorkEventDayByUser($f7, calendar)
                events = getEventsFormatted(eventsDay)
                calendar.params.events = events
                calendar.update()
            }
            eventItems = await renderEventsCalendar(calendar, events)
            calendarWorkEventDayService.setEventItems(eventItems)
            $update()
        }

        $on('pageInit', async () => {
            calendar = await createCalendar($f7, renderEvents, events)
            colorPickerSpectrum = createColorPickerForEventCalendar($f7)
        })

        const send = async (e) => {
            e.preventDefault()
            await calendarWorkEventDayService.send($f7, popupSwipe)
            eventItems = await renderEventsCalendar(calendar, calendarWorkEventDayService.getEvents())
            calendarWorkEventDayService.setEventItems(eventItems)
            $update()
        }

        const edit = (element) => {
            calendarWorkEventDayService.edit($f7, element)
            popupSwipe.open()
        }

        const downloadCalendar = () => downloadCalendarEvents(calendar, $f7)

        handleEditClassForm($f7)

        $onMounted(() => {
            popupSwipe = $f7.popup.create({
                el: '.popup-swipe',
                swipeToClose: true,
            })
        })
  
        return $render
    }
</script>