<template>
    <div id="index-client" class="page">
        <div class="navbar">
            <div class="navbar-inner">
                <div class="title">Mes clients</div>
                <div class="right">
                    <a class="link icon-only panel-open ripple-inset" data-panel="right">
                        <i class="icon material-icons md-only">menu</i>
                        <i class="icon f7-icons if-not-md">menu</i>
                    </a>
                </div>
            </div>
        </div>
        <div class="page-content">
            <div class="block-title">
                <div class="col-6 display-flex justify-content-center">
                    <span>Informations sur les clients</span>
                    <span>
                        <a href="/form-client/">
                            <i class="f7-icons">plus_app_fill</i>
                        </a>
                    </span>
                </div>
            </div>
            ${clientsByUser.map((item) => $h`
            <div class="card color-card">
                <div class="card-header">${item.name}</div>
                <div class="card-content card-content-padding display-flex align-content-center">
                    <div class="col">
                        <div class="row"> Rue : ${item.streetAddress}</div>
                        <div class="row"> Ville : ${item.city}</div>
                        <div class="row"> Code Postal : ${item.postalCode}</div>
                        <div class="row"> Numéro de téléphone : ${getNumberPhoneInString(item.phoneNumber)}</div>
                    </div>
                </div>
                <div class="card-footer d-flex justify-content-end">
                    <a href="/client/"${idClient(item)}>
                        <i class="f7-icons">eye_fill</i>
                    </a>
                </div>
            </div>
            `)}
        </div>
    </div>
</template>
<script>
    import Framework7 from 'framework7/bundle';

    import { getClientsByUser, getNumberPhoneInString } from '../../js/client.js'
    import { loadTabbar } from '../../js/components/tabbar.js'

    export default async (props, { $, $on, $f7 }) => {
        const clients = await getClientsByUser($f7)
        let clientsByUser = clients.reverse()

        const idClient = (client) => client.hasOwnProperty('@id') ? client['@id'].split('/').pop() : client.id
        $on('pageInit', function (page) {
            loadTabbar('index-client', $f7);
        })

        return $render;
    }
</script>