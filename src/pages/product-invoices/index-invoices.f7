<template>
  <div id="index-invoices" class="page">
    <div class="navbar">
      <div class="navbar-inner">
        <div class="title">Factures insérés</div>
        <div class="right">
          <a class="link icon-only panel-open ripple-inset" data-panel="right">
            <i class="icon material-icons md-only">menu</i>
            <i class="icon f7-icons if-not-md">menu</i>
          </a>
        </div>
      </div>
    </div>

    <!-- Page content -->
    <div class="page-content">
        
      <div class="block-title">Factures de vos produits de ${getMontYear(date)}</div>

      <div class="block calendar-input-container-modern">
        <label for="calendar-input-product-invoice-file" class="calendar-product-invoice-label">
          <i class="icon f7-icons calendar-icon-modern">calendar</i>
        </label>
        <input type="text" id="calendar-input-product-invoice-file" placeholder="MM/AAAA" readonly="readonly" />
      </div>

      <!-- Data Table -->
      <div class="data-table data-table-init card">
        <div class="card-header">
          <div class="data-table-links"></div>
          <!-- Bouton de téléchargement ZIP ajouté -->
          <div class="data-table-actions">
            <a
              class="tooltip-init color-white"
              @click="${() => productInvoiceManagerService.downloadSelectedInvoices(dataTableProductInvoiceService.getSelectedProductInvoices(), date)}"
              data-tooltip="Télécharger le zip"
            >
              <i class="icon f7-icons if-not-md">archivebox</i>
              <i class="icon material-icons md-only">archive</i>
            </a>
          </div>
        </div>

        <!-- Table des factures -->
        <div class="card-content">
          <table>
            <thead>
              <tr>
                <th class="checkbox-cell">
                  <label class="checkbox">
                    <input type="checkbox" @change="${(e) => dataTableProductInvoiceService.selectAllInvoices(e)}"/>
                    <i class="icon-checkbox"></i>
                  </label>
                </th>
                <th class="label-cell">Date</th>
                <th class="label-cell">Nom</th>
                <th class="label-cell">Montant total</th>
                <th class="actions-cell">Visualiser</th>
                <th class="actions-cell">Actions</th>
              </tr>
            </thead>
            <tbody>
              ${productInvoiceStore.getters.getInvoices.value.map((invoice) => $h`
                <tr>
                  <td class='checkbox-cell'>
                    <label class="checkbox">
                      <input type="checkbox" @click="${() => dataTableProductInvoiceService.toggleInvoiceSelection(invoice)}"/>
                      <i class="icon-checkbox"></i>
                    </label>
                  </td>
                  <td class="label-cell">${new Date(invoice.date).toLocaleDateString()}</td>
                  <td class="label-cell">${invoice.name}</td>
                  <td class="label-cell">${invoice.totalAmount} €</td>
                  <td class="actions-cell">
                    <a
                      href="#"
                      @click="${() => openPdfPreviewFromUrl(framework7DTO, invoice.id, pdfPreviewPopup)}"
                      class="link external tooltip-init"
                      data-tooltip="Prévisualiser la facture sur l'application"
                    >
                      <i class="f7-icons">eye_fill</i>
                    </a>
                    <a
                      href="${uploadsUrl}/products-invoice/${invoice.path}"
                      target="_blank"
                      class="link external tooltip-init"
                      data-tooltip="Visualiser la facture sur une autre page"
                    >
                      <i class="f7-icons">doc_text_search</i>
                    </a>
                  </td>
                  <td class="actions-cell color-blue">
                    <a id="${invoice.id}"
                      href="#" class="link external"
                      data-date="${invoice.date}"
                      data-name="${invoice.name}"
                      data-total-amount="${invoice.totalAmount}"
                      @click="${(e) => productInvoiceFormService.handleOpenPopupEditProductInvoiceFile($f7, e)}"
                    >
                      <i class="icon f7-icons">square_pencil</i>
                    </a>
                    <a id='${invoice.id}' class="link icon-only" @click="${(e) => productInvoiceManagerService.downloadPDF(e)}">
                      <i class="icon f7-icons if-not-md">download_circle</i>
                      <i class="icon material-icons md-only">download</i>
                    </a>
                    <a id='${invoice.id}' class="link icon-only" @click="${(e) => productInvoiceManagerService.handleDeleteProductInvoice(e, toolbarCalendarProductInvoiceService)}">
                      <i class="icon f7-icons if-not-md">trash</i>
                      <i class="icon material-icons md-only">delete</i>
                    </a>
                  </td>
                </tr>
              `)}
            </tbody>
          </table>
        </div>
      </div>

      <div class="information-product-invoice">
        <p style=" color: #333;">
          Le montant total de vos factures est <strong>${productInvoiceManagerService.totalAmountProductInvoices()} TTC €</strong>
        </p>
        <p style="color: #555;">
          <strong>${productInvoiceManagerService.getTVAOfTotalAmountProductInvoiceFiles()} de TVA €</strong>
        </p>
        <div style="width: 85%;">
          <a class="button button-round button-small button-outline tooltip-init" 
            @click="${() => sheet?.open()}" 
            data-tooltip="Insérer les factures" 
          >
            <i class="f7-icons">cloud_upload</i>
            Insérer les factures
          </a>
          <a class="button button-round button-small button-outline" 
            href="#" 
            @click="${() => sendEmail(date)}"
            style="margin-top: 1%;" 
          >
            <i class="icon f7-icons if-not-md">envelope</i>
            <i class="icon material-icons md-only">mail</i>
            Envoyer un mail pour les factures
          </a>
        </div>
      </div>
    </div>
  </div>
</template>
<script>
  import Framework7 from 'framework7/bundle'
  import { loadTabbar } from '../../js/components/tabbar.js'
  import { getProductsInvoicesByUser} from '../../js/productInvoice.js'
  import DataTableProductInvoiceService from '../../js/service/productInvoices/DataTableProductInvoiceService'
  import { openPdfPreviewFromUrl } from '../../js/service/productInvoices/previewPdfService'
  import ProductInvoiceManagerService from '../../js/service/productInvoices/ProductInvoiceManagerService'
  import { createCalendar } from '../../js/service/calendar/calendarProductInvoiceInput'
  import { createSheet } from '../../js/components/modalUploadFiles.ts'

  import { pdfPreviewPopup } from '../../js/components/pdfPreviewPopup.js'
  import { getMontYear } from '../../js/helper/date.ts'
  import Framework7DTO from '../../js/Framework7DTO.js'
  import { sendEmail } from '../../js/service/mailService'
  import sheetModalProductInvoiceFormatter from '../../js/formatter/sheetModalProductInvoiceFormatter.ts'
  import ProductInvoiceFormService from '../../js/service/productInvoice/ProductInvoiceFormService.ts'
  import ToolbarCalendarProductInvoiceService from '../../js/service/calendarProducInvoice/ToolbarCalendarProductInvoiceService'
  import ProductInvoiceFileManagement from '../../js/service/productInvoices/ProductInvoiceFileManagement'
  import productInvoiceStore from '../../js/store/productInvoiceStore'


  export default async (props, { $, $on, $el, $f7, $onMounted, $update }) => {
    const toolbarCalendarProductInvoiceService = new ToolbarCalendarProductInvoiceService(async () => {
      $update()
    })
    const date = toolbarCalendarProductInvoiceService.getDate()
    const productInvoiceFormService = new ProductInvoiceFormService()
    const dataTableProductInvoiceService = new DataTableProductInvoiceService($f7)
    const productInvoiceFileManagement = new ProductInvoiceFileManagement($f7)
    const productInvoiceManagerService = new ProductInvoiceManagerService($f7)

    $on('pageInit', async function (page) {
      loadTabbar('index-invoices', $f7)
      const productInvoicesByUser = await getProductsInvoicesByUser($f7, date)
      productInvoiceStore.dispatch('setInvoices', productInvoicesByUser)

      createCalendar($f7, new Date(), toolbarCalendarProductInvoiceService)
      $update()
    })

    let sheet
    let popupEdit
    const framework7DTO = new Framework7DTO($f7, $el, $)

    const uploadsUrl = API_URL

    $onMounted(() => {
      sheet = createSheet(
        framework7DTO,
        sheetModalProductInvoiceFormatter,
        () => productInvoiceFileManagement.sendFiles(date, toolbarCalendarProductInvoiceService)
      )
    })

    return $render
  }
</script>
